<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:Fluent="urn:fluent-ribbon"
        xmlns:Custom="http://schemas.microsoft.com/winfx/2006/xaml/presentation/ribbon" x:Class="KipTM.MainWindow"
        mc:Ignorable="d ignore"
        Height="730" Width="840"
        Title="КипТМ"
        x:Name="MainViewWindow" Icon="Content/icon.png"
        >
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Skins/MainSkin.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}"/>
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadView}" CommandParameter="{Binding ElementName=MainViewWindow}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid x:Name="LayoutRoot" Background="{StaticResource MineWindowBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Custom:Ribbon Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
            
        </Custom:Ribbon>
        <!--<Fluent:Ribbon Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">-->
        <!--Backstage-->
        <!--<Fluent:Ribbon.Menu>
                <Fluent:Backstage Icon="Content\icon.png" Header="">
                    <Fluent:BackstageTabControl>
                        <Fluent:Button Header="Blue" Icon="Content\icon.png"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>-->

        <!--Tabs-->
        <!--<Fluent:RibbonTabItem Header="Home">
                <Fluent:RibbonGroupBox Header="Group">
                    <Fluent:Button Header="Green"
                           Icon="Images\Green.png"
                           LargeIcon="Images\GreenLarge.png" />
                    <Fluent:Button Header="Grey" 
                           Icon="Images\Gray.png"
                           LargeIcon="Images\GrayLarge.png" />
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>-->
        <!--</Fluent:Ribbon>-->
        <StackPanel Grid.Column="0" Grid.Row="0" Orientation="Horizontal" Visibility="Collapsed">
            <Image Source="Content/icon.png" Height="50" Margin="5,5,5,5"/>
            <ItemsControl Style="{StaticResource MenuCollectionStyle}">
                <!--<Button Style="{StaticResource ButtonTabStyle}" Content="Архив" Command="{Binding SelectArchive}"/>
                <Button Style="{StaticResource ButtonTabStyle}" Content="Приборы" Command="{Binding SelectTargetDevices}"/>
                <Button Style="{StaticResource ButtonTabStyle}" Content="Эталоны" Command="{Binding SelectEtalonDevices}"/>
                <Button Style="{StaticResource ButtonTabStyle}" Content="Настройки" Command="{Binding SelectSettings}"/>-->
                <Button Content="ПОВЕРКА СИ" Command="{Binding SelectChecks}" IsEnabled="{Binding IsActiveSwitchServices, UpdateSourceTrigger=PropertyChanged}" Background="#FFDDDDDD">
                    <Button.Style>
                        <Style BasedOn="{StaticResource ButtonTabStyle}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActiveCheck, UpdateSourceTrigger=PropertyChanged}" Value="TRUE">
                                    <Setter Property="FontWeight" Value="ExtraBold"/>
                                    <Setter Property="FontStyle" Value="Italic"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <!--<Button Style="{StaticResource ButtonTabStyle}" Content="Архив" Command="{Binding SelectArchive}"/>
                <Button Style="{StaticResource ButtonTabStyle}" Content="Приборы" Command="{Binding SelectTargetDevices}"/>
                <Button Style="{StaticResource ButtonTabStyle}" Content="Эталоны" Command="{Binding SelectEtalonDevices}"/>
                <Button Style="{StaticResource ButtonTabStyle}" Content="Настройки" Command="{Binding SelectSettings}"/>-->
                <Button Content="СЕРВИС" Command="{Binding SelectService}" IsEnabled="{Binding IsActiveSwitchServices, UpdateSourceTrigger=PropertyChanged}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource ButtonTabStyle}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsActiveService, UpdateSourceTrigger=PropertyChanged}" Value="TRUE">
                                    <Setter Property="FontWeight" Value="ExtraBold"/>
                                    <Setter Property="FontStyle" Value="Italic"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </ItemsControl>
        </StackPanel>
        <Border Grid.Column="1" Grid.Row="0" Style="{StaticResource HelpBorderStyle}" x:Name="HelpBorder" Height="50" Visibility="Collapsed">
            <ScrollViewer>
                <TextBox 
					Background="{Binding Background, ElementName=HelpBorder}"
					HorizontalAlignment="Stretch" VerticalAlignment="Center"
					TextAlignment="Center" TextWrapping="Wrap" BorderThickness="0"
					Text="{Binding HelpMessage}"/>
            </ScrollViewer>
        </Border>
       <StatusBar Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="2">
            <TextBlock Text="{Binding Height, ElementName=MainViewWindow}"/>
            <TextBlock><Run Text="Х"/></TextBlock>
            <TextBlock Text="{Binding Width, ElementName=MainViewWindow}"/>
        </StatusBar>
    </Grid>
</Window>
